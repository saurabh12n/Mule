<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <db:mysql-config name="MySQL_Configuration" host="mudb.mulesoft-training.com" port="3306" user="mule" password="mule" database="training" doc:name="MySQL Configuration"/>
    <flow name="getFlightsFlow">
        <choice doc:name="Choice">
            <when expression="#[message.inboundProperties.'http.query.params'.destination]">
                <db:select config-ref="MySQL_Configuration" doc:name="Database">
                    <db:parameterized-query><![CDATA[SELECT *
FROM american
WHERE toAirport = #[message.inboundProperties.'http.query.params'.destination]]]></db:parameterized-query>
                </db:select>
            </when>
            <otherwise>
                <db:select config-ref="MySQL_Configuration" doc:name="Database">
                    <db:parameterized-query><![CDATA[SELECT *
FROM american]]></db:parameterized-query>
                </db:select>
            </otherwise>
        </choice>
        <dw:transform-message doc:name="Transform Message" metadata:id="db7113da-ea97-42aa-9f94-2587d24a9c4f">
            <dw:input-payload doc:sample="sample_data/list_map.dwl"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	ID: payload01.ID,
	code: payload01.code1 ++ payload01.code2,
	price: payload01.price as :number,
	departureDate: payload01.takeOffDate as :string,
	origin: payload01.fromAirport,
	destination: payload01.toAirport,
	emptySeats: payload01.seatsAvailable as :number,
	plane: {
		type: payload01.planeType,
		totalSeats: payload01.totalSeats as :number
	}
})]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="getFlightsByIDFlow">
        <db:select config-ref="MySQL_Configuration" doc:name="Copy_of_Database">
            <db:parameterized-query><![CDATA[SELECT *
FROM american
WHERE ID = #[flowVars.ID]]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="Copy_of_Transform Message" metadata:id="db7113da-ea97-42aa-9f94-2587d24a9c4f">
            <dw:input-payload doc:sample="sample_data/list_map.dwl"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	ID: payload01.ID,
	code: payload01.code1 ++ payload01.code2,
	price: payload01.price as :number,
	departureDate: payload01.takeOffDate as :string,
	origin: payload01.fromAirport,
	destination: payload01.toAirport,
	emptySeats: payload01.seatsAvailable as :number,
	plane: {
		type: payload01.planeType,
		totalSeats: payload01.totalSeats as :number
	}
})]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="postFlightFlow">
        <set-payload value="{&quot;message&quot;: &quot;Flight added (but not really)&quot;}" doc:name="Set Payload"/>
    </flow>
    <flow name="postmultipleflightsflow">
        <http:listener config-ref="american-flights-api-httpListenerConfig" path="/multipleflights" allowedMethods="POST" doc:name="HTTP"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="96588260-5c57-47bd-8b26-1d519aaa3ec3">
            <dw:input-payload doc:sample="C:\saurabh\MuleSoft\MUFundamentals3.9_studentFiles\MUFundamentals3.9_studentFiles\examples\flights-example.xml" mimeType="application/xml"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%namespace ns0 http://soap.training.mulesoft.com/
%type currency = :string {format:"###.00"}
%type flights = :object {class: "com.mulesoft.training.Flight"}
---
flights: payload.ns0#listAllFlightsResponse.*return map {
		price:$.price as :number as :currency,
		destination:$.destination,
		price:$.price as :number as :string {format:"###.00"},
		planeType:upper $.planeType replace /(BOING)/ with "BOEING",
		departureDate: $.departureDate as :date {format: "yyyy/MM/dd"} as :string {format: "MMM, dd, yyyy"},
		availableSeats: $.emptySeats as :number
	
}  as :flights orderBy $.departureDate orderBy $.price distinctBy $
	filter ($.availableSeats != 0)
]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
</mule>
